cmake_minimum_required(VERSION 3.0)

function (LIST_JOIN RESULT SEPARATOR)
  set(_RESULT "")
  set(_FIRST_ARG TRUE)
  foreach (ARG ${ARGN})
    if (_FIRST_ARG)
      set(_RESULT "${_RESULT}${ARG}")
      set(_FIRST_ARG FALSE)
    else()
      set(_RESULT "${_RESULT}${SEPARATOR}${ARG}")
    endif()
  endforeach()
  set(${RESULT} "${_RESULT}" PARENT_SCOPE)
endfunction()

option(VERBOSE_LOGGING "Enable verbose logging in the compiled modules" OFF)
if (VERBOSE_LOGGING)
  add_definitions(-DSIMPLEIPC_DEBUG_LOGGING -DDAEMON_UTILS_LOGGING -DMSA_LOG_NETWORK)
endif()

include(ext/json.cmake)

add_subdirectory(logger)
add_subdirectory(base64)
add_subdirectory(file-util)
add_subdirectory(arg-parser)
add_subdirectory(rapidxml)

add_subdirectory(simple-ipc)
add_subdirectory(daemon-utils/client)
add_subdirectory(daemon-utils/server)

option(ENABLE_MSA_DAEMON "Enables building the daemon" ON)
if (ENABLE_MSA_DAEMON)
  add_subdirectory(msa)
  add_subdirectory(msa-daemon)
endif()

add_subdirectory(msa-daemon-client)

option(MSA_UI_PATH_DEV "Enable development MSA paths. This should be disabled for a packaged build." ON)
set(MSA_UI_PATH .)
set(MSA_UI_DEV_PATH )

option(ENABLE_MSA_GTK_UI "Enables the Gtk-based UI" OFF)
if (ENABLE_MSA_GTK_UI)
  add_subdirectory(msa-ui-gtk)
  list(APPEND MSA_UI_DEV_PATH ../msa-ui-gtk)
endif()
option(ENABLE_MSA_QT_UI "Enables the Qt-based UI" OFF)
if (ENABLE_MSA_QT_UI)
  add_subdirectory(msa-ui-qt)
  list(APPEND MSA_UI_DEV_PATH ../msa-ui-qt)
endif()

if (MSA_UI_PATH_DEV)
  list(APPEND MSA_UI_PATH ${MSA_UI_DEV_PATH})
endif()
if (ENABLE_MSA_DAEMON)
  list_join(MSA_UI_PATH_STR ":" ${MSA_UI_PATH})
  message("MSA UI app path has been set to: ${MSA_UI_PATH_STR}")
  target_compile_definitions(msa-daemon PRIVATE -DMSA_UI_APP_PATH="${MSA_UI_PATH_STR}")
endif()
